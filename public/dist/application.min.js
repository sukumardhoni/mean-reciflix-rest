"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.select","ui.utils","ngStorage"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("listArticles.users",{url:"/users",views:{"user.detail":{templateUrl:"modules/articles/views/create-article.client.view.html"}}}).state("listArticles.categories",{url:"/categories",views:{"user.categories":{templateUrl:"modules/articles/views/edit-article.client.view.html"}}}).state("listArticles.createcategories",{url:"/createcategories",views:{"user.categories":{templateUrl:"modules/articles/views/createcategories.client.view.html"}}}).state("listArticles.recipes",{url:"/recipes",views:{"user.recipes":{templateUrl:"modules/articles/views/view-article.client.view.html"}}})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Vrecipes","$localStorage","$http",function($scope,$stateParams,$location,Authentication,Vrecipes,$localStorage,$http){console.log("articals page"),$scope.authentication=Authentication,console.log("type of user ------------"+JSON.stringify($scope.authentication)),$scope.categories=function(){console.log("categories -----------"),Vrecipes.getcategory.query({},function(res){$scope.categories=res,console.log("list of categories"+JSON.stringify(res))})},$scope.sample=[{value:"1",name:"nonveg"},{value:"2",name:"vegetarian"},{value:"3",name:"seafood"},{value:"4",name:"snacks"},{value:"5",name:"fastfood"},{value:"6",name:"healthy"},{value:"7",name:"specials"},{value:"8",name:"kids"},{value:"9",name:"beverages"},{value:"10",name:"regional"},{value:"11",name:"desserts"},{id:"12",name:"dairy"},{id:"13",name:"chutneysoups"},{value:"14",name:"appetizers"},{value:"15",name:"kicthentips"}],$scope.createcategories=function(){console.log("createcategories -----------"),$scope.newcat=function(){console.log("createcategories Title create function is called : "+$localStorage.token),$http.defaults.headers.common.Authorization="Basic "+$localStorage.token;var categorie={catId:this.categorie.catId,displayName:this.categorie.displayName,imageName:this.categorie.imageName};Vrecipes.savecategory.save(categorie,function(result){$scope.categorie=""})}},$scope.availableTags=["Chicken","Mutton","Veg","Non-veg","Curry","Gravy","Salads","Desserts","Cake","Sweets","Snacks","Appetizers","Breads","Dipping Sides","Kids","Festival","Diwali","Ganesh Festival","Sankranthi","Rakhi","Dushera","Healthy","Indo chineese","South Indian Recipes","Soup","Chutney","Indian Pickels","Pregnancy Diet","Egg Less","SandWhich","Fruit","Special","Hot Drinks","Soft Drinks","Lunch","Break Fast","Pasta","Ice-Creams","Chat","Pickle","North-Indian","Spreads","Rice","Cashews Special","Paratha","Chineese","Rajasthani","Naan","Roti","Milk","Biriyani","Pulao","Cookies","Kitchen Requirements","Mushroom","Pizza","Bakery","Chocolates"],$scope.availableCats=["Chicken","Mutton","Veg","nonveg","Curry","Gravy","Salads","Desserts","Cake","Sweets","Snacks","Appetizers","Breads","Dipping Sides","Kids","Festival","Diwali","Ganesh Festival","Sankranthi","Rakhi","Dushera","Healthy","Indo chineese","South Indian Recipes","Soup","Chutney","Indian Pickels","Pregnancy Diet","Egg Less","SandWhich","Fruit","Special","Hot Drinks","Soft Drinks","Lunch","Break Fast","Pasta","Ice-Creams","Chat","Pickle","North-Indian","Spreads","Rice","Cashews Special","Paratha","Chineese","Rajasthani","Naan","Roti","Milk","Biriyani","Pulao","Cookies","Kitchen Requirements","Mushroom","Pizza","Bakery","Chocolates"],$scope.selected=function(){console.log("selected item"+this.categoriesname),Vrecipes.getrecipes.query({CategoryName:this.categoriesname},function(res){console.log("particular recipeslist"+JSON.stringify(res)),$scope.recipes=res,console.log("selected item"+JSON.stringify(res)),$scope.totalItems=$scope.recipes.length,$scope.itemsPerPage=1,$scope.currentPage=1,$scope.maxSize=5,$scope.pageCount=function(){return Math.ceil($scope.recipes.length/$scope.itemsPerPage)},$scope.$watch("currentPage + itemsPerPage",function(){var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.filteredrecipe=$scope.recipes.slice(begin,end)})})},$scope.updaterecipes=function(recipe){var updatedRecipe=recipe;updatedRecipe.submitted.by="reciflix_admin",updatedRecipe.state=123,Vrecipes.updaterecipes.update({vrecipeId:updatedRecipe._id},updatedRecipe,function(result){},function(err){console.log("Update recipe error : "+JSON.stringify(err))})},$scope.removeRecipes=function(recipe){var updatedRecipe=recipe;updatedRecipe.submitted.by="reciflix_admin",updatedRecipe.state=333,Vrecipes.updaterecipes.update({vrecipeId:updatedRecipe._id},updatedRecipe,function(result){console.log("Remove Recipe details Successfully   "+JSON.stringify(result))},function(err){console.log("Update recipe error : "+JSON.stringify(err))})}}]),angular.module("articles").directive("myYoutube",["$sce",function($sce){return{restrict:"EA",scope:{code:"="},replace:!0,template:'<div style="height:350px; width:100%"><iframe style="overflow:hidden;height:100%;width:70%" controls="0" src="{{url}}" frameborder="0" allowfullscreen></iframe></div>',link:function(scope){console.log("here"),scope.$watch("code",function(newVal){newVal&&(scope.url=$sce.trustAsResourceUrl("http://www.youtube.com/embed/"+newVal))})}}}]),angular.module("articles").factory("Vrecipes",["$resource",function($resource){return{getrecipes:$resource("/VRecipesByCategoriesForAdmin/:CategoryName",{CategoryName:"@CategoryName"},{query:{method:"GET",isArray:!0}}),updaterecipes:$resource("/vrecipes/:vrecipeId",{vrecipeId:"@vrecipeId"},{update:{method:"PUT"}}),getcategory:$resource("/categories/admincats",{},{query:{method:"GET",isArray:!0}}),savecategory:$resource("/newcategories",{},{save:{method:"POST"}})}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$http","$location","$localStorage",function($scope,Authentication,Menus,$http,$location,$localStorage){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.signout=function(){console.log("Checking token when we click on sigout : "+$localStorage.token),$http.defaults.headers.common.Authorization="Basic "+$localStorage.token,$http.post("/users/signout").success(function(response){console.log(response.data),$scope.authentication.user="",console.log("before delete:::"+JSON.stringify($localStorage.token)),delete $localStorage.token,console.log("after delete:::"+JSON.stringify($localStorage.token)),$location.path("/")})}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$state","ProspectiveEmail",function($scope,Authentication,$state,ProspectiveEmail){$scope.authentication=Authentication,$scope.myint=1e3,$scope.slides=[{image:"modules/core/img/brand/Capture1-236x428.png"},{image:"modules/core/img/brand/createacc-236x428.png"},{image:"modules/core/img/brand/Capture-236x428.png"},{image:"modules/core/img/brand/Capture4-236x428.png"},{image:"modules/core/img/brand/Capture4-236x428.png"},{image:"modules/core/img/brand/Capture5-236x428.png"},{image:"modules/core/img/brand/Capture6-236x428.png"},{image:"modules/core/img/brand/fave-236x428.png"},{image:"modules/core/img/brand/Capture3-236x428.png"}],$scope.iosShow=function(){$scope.errMsg="",$scope.sucessMsg="",console.log("U click on iosShow:"),ProspectiveEmail.emailGet.query({platform:"ios"},function(data){console.log("particular iosEmails"+JSON.stringify(data)),$scope.showNotify=data})},$scope.androidShow=function(){$scope.errMsg="",$scope.sucessMsg="",console.log("U click on androidShow:"),ProspectiveEmail.emailGet.query({platform:"android"},function(data){console.log("particular androidEmails"+JSON.stringify(data)),$scope.showNotify=data})},$scope.notifyme=function(platform){console.log("U click on notifyme:"+this.userEmail),console.log("U click on platform:"+platform);var notifyUser={platform:platform,email:this.userEmail};ProspectiveEmail.emailPost.save(notifyUser,function(res){res.type===!1?(console.log("Error console that User already exixts"),$scope.errMsg=res.data):(console.log("suceess nottify user saved "),console.log("suceess nottify user saved "+JSON.stringify(res)),$scope.showNotify.count++,$scope.userEmail="",$scope.errMsg="",$scope.sucessMsg="Your Email id is sucessfully subscribed for ReciFlix App Release Notification")},function(err){console.log("failed to save nottify user"+JSON.stringify(err)),$scope.errMsg=err.data.message,$scope.userEmail="",$scope.sucessMsg=""})}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("ProspectiveEmail",["$resource",function($resource){return{emailPost:$resource("/ProspectiveEmails",{},{save:{method:"POST"}}),emailGet:$resource("/ProspectiveEmails/count/:platform",{platform:"@platform"},{query:{method:"GET"}})}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","$localStorage",function($scope,$http,$location,Authentication,$localStorage){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/users/signup",$scope.credentials).success(function(response){console.log("signup client side response "+JSON.stringify(response)),response.type===!1?$scope.error=response.data:($scope.authentication.user=response,$localStorage.token=response.token,$location.path("/articles"))})},$scope.signin=function(){console.log("signin"),$http.post("/users/signin",$scope.credentials).success(function(response){response.type===!1?$scope.error=response.data:(console.log("signin client side response :"+JSON.stringify(response)),$scope.authentication.user=response,$localStorage.token=response.token,$location.path("/articles"))})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);
